trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  AWS_REGION: 'us-east-1'
  ECR_URI: '474668397798.dkr.ecr.us-east-1.amazonaws.com/spring-boot-app'
  CLUSTER_NAME: 'eks-dev-cluster'
  TF_IN_AUTOMATION: 'true'

stages:
  - stage: TerraformEKS
    displayName: 'Provision EKS via Terraform'
    jobs:
      - job: Terraform
        steps:
          - checkout: self

          - task: TerraformInstaller@1
            inputs:
              terraformVersion: '1.6.6'

          - task: AWSCLI@1
            inputs:
              awsCredentials: 'aws-devops-admin'
              awsRegion: '$(AWS_REGION)'
              command: 'sts get-caller-identity'
            displayName: 'Verify AWS Access'

          - script: |
              terraform init
            displayName: 'Terraform Init'

          - script: |
              terraform plan -out=tfplan
            displayName: 'Terraform Plan'

          - script: |
              terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply'

  - stage: BuildAndPush
    dependsOn: TerraformEKS
    jobs:
      - job: Build
        steps:
          - checkout: self

          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'
              options: '-DskipTests'

          - script: |
              docker build -t $ECR_URI:latest .
            displayName: 'Build Docker Image'

          - task: AWSCLI@1
            inputs:
              awsCredentials: 'aws-devops-admin'
              awsRegion: '$(AWS_REGION)'
              command: |
                ecr get-login-password --region $(AWS_REGION) \
                | docker login --username AWS --password-stdin $(ECR_URI)
            displayName: 'Login to ECR'

          - script: |
              docker push $ECR_URI:latest
            displayName: 'Push to ECR'

  - stage: DeployToEKS
    dependsOn: BuildAndPush
    jobs:
      - job: Deploy
        steps:
          - checkout: self

          - task: AWSCLI@1
            inputs:
              awsCredentials: 'aws-devops-admin'
              awsRegion: '$(AWS_REGION)'
              command: 'eks update-kubeconfig --name $(CLUSTER_NAME)'

          - script: |
              kubectl apply -f deployment/deployment.yaml
              kubectl apply -f deployment/service.yaml
            displayName: 'Deploy to EKS'
